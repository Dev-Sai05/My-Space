						if (allowTellerBranchFlag.equals("Y")) {
							logger.info(
									"VC------------------------Teller&Branch Validated Sucessfully------------------------VC");
							
							String lacctno = (cifno == null || cifno.isEmpty()) ? "00000000000000000" : String.format("%017d", new BigInteger(cifno));	

					        LsInputCustNumber input = new LsInputCustNumber();
					        LsOutputAccountNumbers output = new LsOutputAccountNumbers();
					        LsErrorNumber error = new LsErrorNumber();
					        logger.info(
									"Checking for numbers++++++++++++++++++++++++++++++++++++++" + cifno);
					        input.setLsInputCustNumber(lacctno);
					        logger.info(
									"Checking for numbers++++++++++++++++++++++++++++++++++++++" + input);
					        // Call JVMCUCC
					        jvmcucc.JVMCUCC(input, error, output);

					        // Extract and validate the output
					        String accno = output.getLsOutputAccountNumbers();
					         errno = error.getLsErrorNumber();
							logger.info("VC------------------------Fetched ERROR_NUMBER------------------------VC" + errno);
					        logger.info(
									"Checking for numbers++++++++++++++++++++++++++++++++++++++" + accno);
						res = balance.Balance_Enquiry_Child(accno, Integer.parseInt(requestedNoOfRecords), accountno);
						out_response = res.get(0);
						noOfRecords = res.get(1);
						logger.info("VC------------------------Fetched NO_OF_RECORDS------------------------VC" + noOfRecords);
						errno = res.get(2);
						logger.info("VC------------------------Fetched ERROR_NUMBER------------------------VC" + errno);
						}
					}
						
