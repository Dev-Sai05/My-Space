Hello,

based on your answer I have tested two ways

int SExtUebergabeLen = 815;
SExtUebergabe sExtUebergabe = new SExtUebergabe();
int SUservgIoLen = 4711;
SUservgIo sUservgIo = new SUservgIo();

RunUnit runUnit = new RunUnit();

XUSERVG xuservg = (XUSERVG) getCallable(); // creates an instance of XUSERVG
runUnit.Add((IObjectControl) xuservg);
retValue = xuservg.XUSERVG(SExtUebergabeLen, sExtUebergabe, SUservgIoLen, sUservgIo);

This works like a charm but runUnit.Call is not working (or at least I do not understand how to use it) so :

int SExtUebergabeLen = 815;

SExtUebergabe sExtUebergabe = new SExtUebergabe();
int SUservgIoLen = 4711;
SUservgIo sUservgIo = new SUservgIo();

RunUnit runUnit = new RunUnit(); // XUSERVG is not instanciated and added to the RunUnit

Object params [] = {SExtUebergabeLen, sExtUebergabe, SUservgIoLen, sUservgIo};
retValue = runUnit.Call("de.lv1871.cobol.XUSERVG", params);


------------------------



public List<String> validateCHKD(String acctno) {
    List<String> res = new ArrayList<>();
    RunUnit runUnit = new RunUnit(); // Initialize RunUnit

    try {
        // Prepare input and output parameters
        LsJvmChkdInpAcc input = new LsJvmChkdInpAcc();
        LsJvmChkdAllowFlag output1 = new LsJvmChkdAllowFlag();
        LsJvmChkdErrorNumber output2 = new LsJvmChkdErrorNumber();

        input.setLsJvmChkdInpAcc(acctno);

        // Example of runUnit.Call()
        Object[] params = { input, output2, output1 };
        runUnit.Call("com.tcs.bancs.microservices.jvm.validatechkd.CHKD01", params);

        // Collect output
        res.add(output1.getLsJvmChkdAllowFlag());
        res.add(output2.getLsJvmChkdErrorNumber());
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        runUnit.close(); // Ensure RunUnit is closed
    }

    return res;
}


--------------------Temolen

package com.tcs.bancs.microservices.java.validatechkd;

import java.util.ArrayList;
import java.util.List;

import com.microfocus.cobol.runtime.RunUnit;

import com.tcs.bancs.microservices.jvm.validatechkd.CHKD01;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdInpAcc;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdAllowFlag;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdErrorNumber;

import com.tcs.bancs.microservices.jvm.validatechkd1.CHKD02;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdInpAcc1;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdAllowFlag1;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdErrorNumber1;

public class ValidateCheckDigit {

    public static void main(String[] args) {
        String acctno = "95047271448"; // Input account number
        int refno = 0; // Reference number

        ValidateCheckDigit validator = new ValidateCheckDigit();
        List<String> result;

        // Check reference number and call respective method
        if (refno % 2 == 0) {
            result = validator.validateCHKD(acctno);
        } else {
            result = validator.validateCHKD1("95047271447");
        }

        // Print results
        System.out.println("Validation Results: " + result);
    }

    public List<String> validateCHKD(String acctno) {
        List<String> res = new ArrayList<>();
        RunUnit runUnit = new RunUnit(); // Initialize RunUnit

        try {
            // Prepare input and output parameters
            LsJvmChkdInpAcc input = new LsJvmChkdInpAcc();
            LsJvmChkdAllowFlag output1 = new LsJvmChkdAllowFlag();
            LsJvmChkdErrorNumber output2 = new LsJvmChkdErrorNumber();

            input.setLsJvmChkdInpAcc(acctno);

            // Use runUnit.Call to invoke CHKD01
            Object[] params = { input, output2, output1 };
            runUnit.Call("com.tcs.bancs.microservices.jvm.validatechkd.CHKD01", params);

            // Collect output
            res.add(output1.getLsJvmChkdAllowFlag());
            res.add(output2.getLsJvmChkdErrorNumber());
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            runUnit.close(); // Ensure RunUnit is closed
        }

        return res;
    }

    public List<String> validateCHKD1(String acctno) {
        List<String> res = new ArrayList<>();
        RunUnit runUnit = new RunUnit(); // Initialize RunUnit

        try {
            // Prepare input and output parameters
            LsJvmChkdInpAcc1 input1 = new LsJvmChkdInpAcc1();
            LsJvmChkdAllowFlag1 output11 = new LsJvmChkdAllowFlag1();
            LsJvmChkdErrorNumber1 output21 = new LsJvmChkdErrorNumber1();

            input1.setLsJvmChkdInpAcc1(acctno);

            // Use runUnit.Call to invoke CHKD02
            Object[] params = { input1, output21, output11 };
            runUnit.Call("com.tcs.bancs.microservices.jvm.validatechkd1.CHKD02", params);

            // Collect output
            res.add(output11.getLsJvmChkdAllowFlag1());
            res.add(output21.getLsJvmChkdErrorNumber1());
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            runUnit.close(); // Ensure RunUnit is closed
        }

        return res;
    }
}




















package com.tcs.bancs.microservices.java.validatechkd;

import java.util.List;
import java.util.ArrayList;
import com.microfocus.cobol.runtime.RunUnit;
import com.tcs.bancs.microservices.jvm.validatechkd.CHKD01;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdInpAcc;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdAllowFlag;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdErrorNumber;
import com.tcs.bancs.microservices.jvm.validatechkd1.CHKD02;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdInpAcc1;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdAllowFlag1;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdErrorNumber1;

public class ValidateCheckDigit {

    public static void main(String[] args) {
        // Define account numbers as inputs
        String[] accountNumbers = {"95047271448", "95047271449", "95047271450", "95047271451"};

        for (int i = 0; i < accountNumbers.length; i++) {
            if (i % 2 == 0) { // Even index
                try (RunUnit runUnit1 = new RunUnit()) {
                    System.out.println("Even Input: " + accountNumbers[i]);
                    ValidateCHKD01 validateCHKD01 = runUnit1.activate(ValidateCHKD01.class);
                    System.out.println(validateCHKD01.validateCHKD(accountNumbers[i]));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else { // Odd index
                try (RunUnit runUnit2 = new RunUnit()) {
                    System.out.println("Odd Input: " + accountNumbers[i]);
                    ValidateCHKD02 validateCHKD02 = runUnit2.activate(ValidateCHKD02.class);
                    System.out.println(validateCHKD02.validateCHKD1(accountNumbers[i]));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

// Separate class for CHKD01 logic
class ValidateCHKD01 {
    public List<String> validateCHKD(String acctno) {
        CHKD01 chkd01 = new CHKD01();
        LsJvmChkdInpAcc input = new LsJvmChkdInpAcc();
        LsJvmChkdAllowFlag output1 = new LsJvmChkdAllowFlag();
        LsJvmChkdErrorNumber output2 = new LsJvmChkdErrorNumber();

        input.setLsJvmChkdInpAcc(acctno);
        chkd01.CHKD01(input, output2, output1);

        List<String> result = new ArrayList<>();
        result.add("AllowFlag: " + output1.getLsJvmChkdAllowFlag());
        result.add("ErrorNumber: " + output2.getLsJvmChkdErrorNumber());

        return result;
    }
}

// Separate class for CHKD02 logic
class ValidateCHKD02 {
    public List<String> validateCHKD1(String acctno) {
        CHKD02 chkd02 = new CHKD02();
        LsJvmChkdInpAcc1 input1 = new LsJvmChkdInpAcc1();
        LsJvmChkdAllowFlag1 output11 = new LsJvmChkdAllowFlag1();
        LsJvmChkdErrorNumber1 output21 = new LsJvmChkdErrorNumber1();

        input1.setLsJvmChkdInpAcc1(acctno);
        chkd02.CHKD02(input1, output21, output11);

        List<String> result = new ArrayList<>();
        result.add("AllowFlag: " + output11.getLsJvmChkdAllowFlag1());
        result.add("ErrorNumber: " + output21.getLsJvmChkdErrorNumber1());

        return result;
    }
}


package com.tcs.bancs.microservices.java.validatechkd;

import java.util.List;
import java.util.ArrayList;
import com.microfocus.cobol.runtime.RunUnit;
import com.tcs.bancs.microservices.jvm.validatechkd.CHKD01;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdInpAcc;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdAllowFlag;
import com.tcs.bancs.microservices.jvm.validatechkd.LsJvmChkdErrorNumber;
import com.tcs.bancs.microservices.jvm.validatechkd1.CHKD02;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdInpAcc1;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdAllowFlag1;
import com.tcs.bancs.microservices.jvm.validatechkd1.LsJvmChkdErrorNumber1;

public class ValidateCheckDigit {

    // Instances for CHKD01 and CHKD02
    CHKD01 chkd01 = new CHKD01();
    LsJvmChkdInpAcc input = new LsJvmChkdInpAcc();
    LsJvmChkdAllowFlag output1 = new LsJvmChkdAllowFlag();
    LsJvmChkdErrorNumber output2 = new LsJvmChkdErrorNumber();

    CHKD02 chkd02 = new CHKD02();
    LsJvmChkdInpAcc1 input1 = new LsJvmChkdInpAcc1();
    LsJvmChkdAllowFlag1 output11 = new LsJvmChkdAllowFlag1();
    LsJvmChkdErrorNumber1 output21 = new LsJvmChkdErrorNumber1();

    public static void main(String args[]) {
        String acctno = "95047271448"; // Account number input
        int refno = 0;  // Reference number (for example to alternate between methods)

        // Create an instance of the ValidateCheckDigit class
        ValidateCheckDigit obj = new ValidateCheckDigit();

        if (refno % 2 == 0) {
            // If refno is even, use CHKD01
            System.out.println(obj.validateCHKD(acctno));
        } else {
            // If refno is odd, use CHKD02
            System.out.println(obj.validateCHKD1("95047271447"));
        }
    }

    public List<String> validateCHKD(String acctno) {
        List<String> res = new ArrayList<>(); 

        try (RunUnit runUnit = new RunUnit()) {
            // Activate the CHKD01 rununit and pass the input reference
            runUnit.activate(CHKD01.class);

            // Set the account number to the input object
            input.setLsJvmChkdInpAcc(acctno);

            // Call the COBOL method
            chkd01.CHKD01(input, output2, output1);

            // Collect the results
            res.add(output1.getLsJvmChkdAllowFlag());
            res.add(output2.getLsJvmChkdErrorNumber());
        } catch (Exception e) {
            e.printStackTrace();
        }

        return res;
    }

    public List<String> validateCHKD1(String acctno) {
        List<String> res = new ArrayList<>(); 

        try (RunUnit runUnit = new RunUnit()) {
            // Activate the CHKD02 rununit and pass the input reference
            runUnit.activate(CHKD02.class);

            // Set the account number to the input object
            input1.setLsJvmChkdInpAcc1(acctno);

            // Call the COBOL method
            chkd02.CHKD02(input1, output21, output11);

            // Collect the results
            res.add(output11.getLsJvmChkdAllowFlag1());
            res.add(output21.getLsJvmChkdErrorNumber1());
        } catch (Exception e) {
            e.printStackTrace();
        }

        return res;
    }
}
