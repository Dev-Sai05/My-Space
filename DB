//    SBI Core Banking Project, Hyderabad, India.       *
//*****************************************************************
//                                                                *
//  	           PROGRAM - DBConnection.java                    *
//                                                                *
//*****************************************************************
//                 P R O G R A M    H I S T O R Y                 *
//                                                                *
//   PROGRAMMER    :    DATE       :  SPR NO   :   COMMENTS       *
//----------------------------------------------------------------*
// Niharika Tammana: 02/09/2024    : 24090001  :  MICROSERVICES   *
//----------------------------------------------------------------*
package com.tcs.bancs.microservices.java.dbconnection;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import com.tcs.bancs.microservices.jvm.dbconnection.JVMUTENV;
import com.tcs.bancs.microservices.jvm.dbconnection.JvmLsCallCode;
import com.tcs.bancs.microservices.jvm.dbconnection.JvmLsEnvRecordArea;
import com.tcs.bancs.microservices.jvm.dbconnection.JvmLsOptCode;

@Component
public class DBConnection {
	
	Logger logger = LoggerFactory.getLogger(DBConnection.class);
	
	@Value("${UTENVCALS-DEF-RMODE}")
	private String dbmode;
	
    @Value("${day.datasource.jdbc-url}")
    private String dayJdbcUrl;
	
    @Value("${day.datasource.username}")
    private String dayUsername;

    @Value("${day.datasource.password}")
    private String dayPassword;
    
    @Value("${day.datasource.driver-class-name}")
    private String dayDriverClass;
    
    @Value("${night.datasource.jdbc-url}")
    private String nightJdbcUrl;

    @Value("${night.datasource.username}")
    private String nightUsername;

    @Value("${night.datasource.password}")
    private String nightPassword;
    
    @Value("${night.datasource.driver-class-name}")
    private String nightDriverClass;
    
	JVMUTENV 			jvmenv = new JVMUTENV();
	JvmLsCallCode 		callCode = new JvmLsCallCode();
	JvmLsOptCode 		optcode = new JvmLsOptCode();
	JvmLsEnvRecordArea 	commonarea = new JvmLsEnvRecordArea();
	
    DBConnection_Child	dbobj	=	new DBConnection_Child();
    
    public String getCBSDBConnection(String dbcallCode,String inpcallCode, String inpoptcode, String inpcommonarea) throws InvalidDataSourceFormatException{

    	logger.info("Trying to connect to CBS DB...");
    	
		String cbsDBAllowFlag = "N";
		String dbtype       = new String();
		String jdbcUrl      = new String();
		String username     = new String();
		String password     = new String();
		String driverClass = new String();

        try {
	        dbtype = getDbType(dbmode);
	        jdbcUrl = getJdbcUrl(dbtype);
	        username = getUsername(dbtype);
	        password = getPassword(dbtype);
	        driverClass = getDriverClass(dbtype);
        } catch(InvalidDataSourceFormatException e) {
        	logger.error("dbconnection : Error in the fetched datasource type");
        	return cbsDBAllowFlag;
        }
        
		callCode.setJvmLsCallCode(inpcallCode);
		optcode.setJvmLsOptCode(inpoptcode);
	    commonarea.setJvmLsEnvRecordArea(inpcommonarea);
		jvmenv.JVMUTENV(callCode, optcode, commonarea);
        
        String connectionString = jdbcUrl.split("@")[0] + username + "/" + password + "@" + jdbcUrl.split("@")[1];

        String denyFlag = dbobj.callJVM(dbcallCode, connectionString, driverClass);

	        if(denyFlag.equals("N")) {
	        	cbsDBAllowFlag = "Y";
	        }	        

		return cbsDBAllowFlag;
	  }
	
	  private String getDbType(String flag) {
		  
		  if(flag.equalsIgnoreCase("D") || flag.equalsIgnoreCase("T")) {
			  return "day";			  
		  }
		  else if(flag.equalsIgnoreCase("N")) {
			  return "night";
		  }
		  else {
          	logger.error("dbconnection : Unsupported datasource type");
            throw new InvalidDataSourceFormatException("Unsupported datasource type");
		  }
	  }
	  private String getDriverClass(String type) {
	        switch (type) {
            case "day":
                return dayDriverClass;
            case "night":
                return nightDriverClass;
            default:
            	logger.error("dbconnection : Unsupported datasource type");
                throw new InvalidDataSourceFormatException("Unsupported datasource type");
        }
	  }

	public String getJdbcUrl(String type) {
	        switch (type) {
	            case "day":
	                return dayJdbcUrl;
	            case "night":
	                return nightJdbcUrl;
	            default:
	            	logger.error("dbconnection : Unsupported datasource type");
	                throw new InvalidDataSourceFormatException("Unsupported datasource type");
	        }
	  }

	  public String getUsername(String type) {
	        switch (type) {
	            case "day":
	                return dayUsername;
	            case "night":
	                return nightUsername;
	            default:
	            	logger.error("dbconnection : Unsupported datasource type");
	                throw new InvalidDataSourceFormatException("Unsupported datasource type");
	        }
	  }
		
	  public String getPassword(String type) { 
			  switch (type) { 
			  case "day": 
				  return dayPassword; 
			  case "night": 
				  return nightPassword;  
			  default: 
				  logger.error("dbconnection : Unsupported datasource type");
				  throw new InvalidDataSourceFormatException("Unsupported datasource type");
	        }
	  } 	  
}










===========================



//    SBI Core Banking Project, Hyderabad, India.       *
//*****************************************************************
//                                                                *
//  	           PROGRAM - DBConnection.java                    *
//                                                                *
//*****************************************************************
//                 P R O G R A M    H I S T O R Y                 *
//                                                                *
//   PROGRAMMER    :    DATE       :  SPR NO   :   COMMENTS       *
//----------------------------------------------------------------*
// Niharika Tammana: 02/09/2024    : 24090001  :  MICROSERVICES   *
//----------------------------------------------------------------*
package com.tcs.bancs.microservices.java.dbconnection;

import com.tcs.bancs.microservices.jvm.dbconnection.VCMISC;
import com.tcs.bancs.microservices.jvm.dbconnection.LsVcmiscCallCode;
import com.tcs.bancs.microservices.jvm.dbconnection.LsVcmiscConnectionUrl;
import com.tcs.bancs.microservices.jvm.dbconnection.LsVcmiscDriverClass;
import com.tcs.bancs.microservices.jvm.dbconnection.LsVcmiscErrorFlag;

public class DBConnection_Child {

	VCMISC					vcmisc	=	new VCMISC();
	LsVcmiscCallCode		input1	=	new LsVcmiscCallCode();
	LsVcmiscConnectionUrl	input2	=	new LsVcmiscConnectionUrl();
	LsVcmiscDriverClass		input3	= new LsVcmiscDriverClass();
	LsVcmiscErrorFlag		output	= new LsVcmiscErrorFlag();
	
	public String callJVM(String callcode, String connectionurl, String driverclass) {
		
		String denyflag = "";
		
		input1.setLsVcmiscCallCode(callcode);
		input2.setLsVcmiscConnectionUrl(connectionurl);
		input3.setLsVcmiscDriverClass(driverclass);
		vcmisc.VCMISC(input1, input2, input3, output);
		
		denyflag = output.getLsVcmiscErrorFlag();	
		
		return denyflag;
	}
}


==========================================


000100*            SBI Core Banking Project, CBD Belapur               *
000200*                     Mumbai , India.                            *
000300******************************************************************
000400*                                                                *
000500*  PROGRAM - VCMISC.COB                                          *
000600*                                                                *
000700******************************************************************
000800*                 P R O G R A M    H I S T O R Y                 *
000900*                                                                *
001000* PROGRAMMER   : DATE       : SPR NO   :COMMENTS                 *
001100*----------------------------------------------------------------*
001200* ROHITH KUMAR : 02/09/2024 : 24090001 : CODE FOR CONNECTION AND *
001300*                                        COMMIT AND ROOLBACK IN  *
001400*                                        CBS MICORSERVICES       *
001500*----------------------------------------------------------------*
001600 IDENTIFICATION DIVISION.
001700 PROGRAM-ID. VCMISC.
001800 AUTHOR. TATA CONSULTANCY SERVICES.
001900 DATE-WRITTEN.  02/09/2024.
002000 ENVIRONMENT DIVISION.
002100 CONFIGURATION SECTION.
002200 SOURCE-COMPUTER. VAX.
002300 OBJECT-COMPUTER. VAX.
002400 SPECIAL-NAMES.
002500 CONSOLE IS CONS.
002600 INPUT-OUTPUT SECTION.
002700 FILE-CONTROL.
002800 DATA DIVISION.
002900 FILE SECTION.
003000 WORKING-STORAGE SECTION.
003100
003200 01 WA-VCMISC-CALL-CODE               PIC X(02).
003300 01 WA-VCMISC-CONNECTION-URL          PIC X(1000).
003400 01 WA-VCMISC-ERROR-CODE              PIC X(04).
003500 01 WA-VCMISC-CONNECTION-STATUS       PIC X(01) VALUE "N".
003600
003700 01 WS-CONNECTION-STRING.
003800    03 FILLER                         PIC X(04)      VALUE "URL=".
003900    03 WA-DATABASE-URL                PIC X(1000).
004000 01 WA-DRIVER-CLASS                   PIC X(200).
004100    EXEC SQL BEGIN DECLARE SECTION END-EXEC.
004200 01 CONNECTIONSTRING                  PIC X(1000).
004300    EXEC SQL END DECLARE SECTION END-EXEC.
004400    EXEC SQL INCLUDE SQLCA END-EXEC.
004500 01  WA-SQLCODE                        PIC S9(9) SIGN LEADING SEPARATE.
004600
004700    COPY UT8500CA     IN LIBRYMIS.
004800    COPY UT8500FU     IN LIBRYMIS.
004900
005000 LINKAGE SECTION.
005100
005200 01 LS-VCMISC-CALL-CODE               PIC X(02).
       01 LS-CONNECTION-DS                  object.
005300*01 LS-VCMISC-CONNECTION-URL          PIC X(1000).
005400*01 LS-VCMISC-DRIVER-CLASS            PIC X(200).
005500 01 LS-VCMISC-ERROR-FLAG              PIC X(01).
005600
005700
005800 PROCEDURE DIVISION USING  LS-VCMISC-CALL-CODE
006100                           LS-VCMISC-ERROR-FLAG
                                 by value LS-CONNECTION-DS.
006200
006300 A000-MAIN-PARA.
006400
006500     PERFORM A001-INIT-PARA                  THRU A001-EXIT
006600     EVALUATE WA-VCMISC-CALL-CODE
006700         WHEN "01"
006800*             IF WA-VCMISC-CONNECTION-STATUS = "N"
006900                 PERFORM A002-CONNECT-PARA   THRU A002-EXIT
      *             else
      *                 display "already exists"
007000*             END-IF
007100         WHEN "02"
007200             PERFORM A003-COMMIT-PARA        THRU A003-EXIT
007300         WHEN "03"
007400             PERFORM A004-ROLLBACK-PARA      THRU A004-EXIT
               WHEN "04"
                   PERFORM A005-UNBIND-PARA        THRU A005-EXIT
007500         WHEN OTHER
007600             SET UT8500CA-NORMAL-DISPLAY TO TRUE
007700             MOVE UT8500CA-FUNC-NORMAL-DISPLAY
007800                               TO UT8500CA-CALL-CODE
007900             MOVE SPACES TO UT8500CA-INPUT-MSG
008000             STRING "VCMISC(A000) : PLEASE ENTER VALID "
008100-              "VCMISC CALL CODE " WA-VCMISC-CALL-CODE
008200                 DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
008300             MOVE "N" TO UT8500CA-RESPONSE-REQD-FLAG
008400             CALL "UT8500" USING
008500                              UT8500CA-AREA
008600             MOVE "Y" TO LS-VCMISC-ERROR-FLAG
008700     END-EVALUATE.
008800     
008900 A000-EXIT.
009000 EXIT.
009100 EXIT PROGRAM.
009200
009300 A001-INIT-PARA.
009400
009500     IF WA-VCMISC-CONNECTION-STATUS = "Y"
009600        MOVE "N"   TO LS-VCMISC-ERROR-FLAG
009700        GO TO A000-EXIT
009800     END-IF
009900     INITIALIZE WA-VCMISC-CALL-CODE
010000                WA-VCMISC-CONNECTION-URL
010100                WA-VCMISC-ERROR-CODE
010200                CONNECTIONSTRING
010300                WA-DATABASE-URL
010400                WA-DRIVER-CLASS
010500                LS-VCMISC-ERROR-FLAG.
010600     MOVE LS-VCMISC-CALL-CODE         TO WA-VCMISC-CALL-CODE
010700*    MOVE LS-VCMISC-CONNECTION-URL    TO WA-DATABASE-URL
010800*    MOVE LS-VCMISC-DRIVER-CLASS      TO WA-DRIVER-CLASS.
010900  .
011000 A001-EXIT.
011100 EXIT.
011200
011300 A002-CONNECT-PARA.
               exec SQL 
                   BIND CONNECTION conn TO :LS-CONNECTION-DS
               end-exec
               IF SQLCODE = ZEROS
                  move "N" to LS-VCMISC-ERROR-FLAG
                  move "Y" to WA-VCMISC-CONNECTION-STATUS
                  DISPLAY "SUCCESS" SQLCODE
               ELSE
                   move "Y" to LS-VCMISC-ERROR-FLAG
                   DISPLAY "FAILURE" SQLCODE
               END-IF
           
011400*
011500*    MOVE "Driver=" & function TRIM(WA-DRIVER-CLASS) & ";" & WS-CONNECTION-STRING
011600*    TO CONNECTIONSTRING.
011700*
011800*    EXEC SQL
011900*         CONNECT USING :CONNECTIONSTRING
012000*    END-EXEC
012100*
012200*    MOVE SQLCODE       TO WA-SQLCODE
012300*    IF WA-SQLCODE = ZEROES
012400*       SET UT8500CA-NORMAL-DISPLAY TO TRUE
012500*       MOVE UT8500CA-FUNC-NORMAL-DISPLAY
012600*                         TO UT8500CA-CALL-CODE
012700*       MOVE SPACES TO UT8500CA-INPUT-MSG
012800*       STRING "VCMISC(A002) : SUCCESSFUL "
012900*         "CONNECTION OF DATABASE " WA-SQLCODE
013000*           DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
013100*       MOVE "N" TO UT8500CA-RESPONSE-REQD-FLAG
013200*       CALL "UT8500" USING
013300*                        UT8500CA-AREA
013400*       MOVE "N"   TO LS-VCMISC-ERROR-FLAG
013500*       MOVE "Y"   TO WA-VCMISC-CONNECTION-STATUS
013600*    ELSE
013700*       SET UT8500CA-NORMAL-DISPLAY TO TRUE
013800*       MOVE UT8500CA-FUNC-NORMAL-DISPLAY
013900*                         TO UT8500CA-CALL-CODE
014000*       MOVE SPACES TO UT8500CA-INPUT-MSG
014100*       STRING "VCMISC(A002) : ERORR IN "
014200*         "CONNECTING DATABASE " WA-SQLCODE
014300*           DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
014400*       MOVE "N" TO UT8500CA-RESPONSE-REQD-FLAG
014500*       CALL "UT8500" USING
014600*                        UT8500CA-AREA
014700*       MOVE "Y"   TO LS-VCMISC-ERROR-FLAG
014800*    END-IF.
014900   .
015000 A002-EXIT.
015100 EXIT.
015200
015300 A003-COMMIT-PARA.
015400
015500     EXEC SQL
015600          COMMIT
015700     END-EXEC
015800
015900     MOVE SQLCODE       TO WA-SQLCODE
016000     IF WA-SQLCODE = ZEROES
016100        SET UT8500CA-NORMAL-DISPLAY TO TRUE
016200        MOVE UT8500CA-FUNC-NORMAL-DISPLAY
016300                          TO UT8500CA-CALL-CODE
016400        MOVE SPACES TO UT8500CA-INPUT-MSG
016500        STRING "VCMISC(A003) : COMMIT "
016600-         "SUCCESSFUL " WA-SQLCODE
016700            DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
016800        MOVE "N" TO UT8500CA-RESPONSE-REQD-FLAG
016900        CALL "UT8500" USING
017000                         UT8500CA-AREA
017100        MOVE "N"   TO LS-VCMISC-ERROR-FLAG
017200     ELSE
017300        SET UT8500CA-NORMAL-DISPLAY TO TRUE
017400        MOVE UT8500CA-FUNC-NORMAL-DISPLAY
017500                          TO UT8500CA-CALL-CODE
017600        MOVE SPACES TO UT8500CA-INPUT-MSG
017700        STRING "VCMISC(A003) : COMMIT "
017800-         "NOT SUCCESSFUL " WA-SQLCODE
017900            DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
018000        MOVE "N" TO UT8500CA-RESPONSE-REQD-FLAG
018100        CALL "UT8500" USING
018200                         UT8500CA-AREA
018300        MOVE "Y"   TO LS-VCMISC-ERROR-FLAG
018400     END-IF.
018500
018600 A003-EXIT.
018700 EXIT.
018800
018900 A004-ROLLBACK-PARA.
019000
019100     EXEC SQL
019200          ROLLBACK
019300     END-EXEC
019400
019500     MOVE SQLCODE TO WA-SQLCODE
019600     IF WA-SQLCODE = ZEROES
019700        SET UT8500CA-NORMAL-DISPLAY TO TRUE
019800        MOVE UT8500CA-FUNC-NORMAL-DISPLAY
019900                          TO UT8500CA-CALL-CODE
020000        MOVE SPACES TO UT8500CA-INPUT-MSG
020100        STRING "VCMISC(A004) : ROLLBACK "
020200-         "SUCCESSFUL " WA-SQLCODE
020300            DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
020400        MOVE "N" TO UT8500CA-RESPONSE-REQD-FLAG
020500        CALL "UT8500" USING
020600                         UT8500CA-AREA
020700        MOVE "N"   TO LS-VCMISC-ERROR-FLAG
020800     ELSE
020900        SET UT8500CA-NORMAL-DISPLAY TO TRUE
021000        MOVE UT8500CA-FUNC-NORMAL-DISPLAY
021100                          TO UT8500CA-CALL-CODE
021200        MOVE SPACES TO UT8500CA-INPUT-MSG
021300        STRING "VCMISC(A004) : ROLLBACK "
021400-         "NOT SUCCESSFUL " WA-SQLCODE
021500            DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
021600        MOVE "N" TO UT8500CA-RESPONSE-REQD-FLAG
021700        CALL "UT8500" USING
021800                         UT8500CA-AREA
021900        MOVE "Y"   TO LS-VCMISC-ERROR-FLAG
022000     END-IF.
022100
022200 A004-EXIT.
022300 EXIT.
           
       A005-UNBIND-PARA.
           exec SQL 
                   UNBIND CONNECTION conn
               end-exec
                   
               IF SQLCODE = ZEROS
      *           move "N" to LS-VCMISC-ERROR-FLAG
                  move "Y" to WA-VCMISC-CONNECTION-STATUS
                  DISPLAY "SUCCESS unbinded" SQLCODE
               ELSE
      *            move "Y" to LS-VCMISC-ERROR-FLAG
                   DISPLAY "FAILURE unbind" SQLCODE
               END-IF
               display "unbind connection cobol"
                 
               .
       A005-EXIT.
           EXIT.
